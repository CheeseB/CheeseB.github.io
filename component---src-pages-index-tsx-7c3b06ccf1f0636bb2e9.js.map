{"version":3,"file":"component---src-pages-index-tsx-7c3b06ccf1f0636bb2e9.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Main/PostItem.tsx","webpack://gatsby-starter-default/./src/components/Main/PostList.tsx","webpack://gatsby-starter-default/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-starter-default/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-default/./node_modules/split-on-first/index.js","webpack://gatsby-starter-default/./node_modules/filter-obj/index.js","webpack://gatsby-starter-default/./node_modules/query-string/base.js","webpack://gatsby-starter-default/./node_modules/query-string/index.js","webpack://gatsby-starter-default/./src/components/Main/MainCheeseBall.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { Link } from 'gatsby';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\nimport { PostFrontmatterType } from 'types/PostItem.types';\r\n\r\ntype PostItemProps = PostFrontmatterType & { link: string };\r\n\r\nconst PostItemWrapper = styled(Link)`\r\n  position: relative;\r\n  top: 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n  cursor: pointer;\r\n  transition: top 0.2s ease;\r\n\r\n  &:hover {\r\n    top: -5px;\r\n  }\r\n`;\r\n\r\nconst ThumbnailImage = styled(GatsbyImage)`\r\n  width: 100%;\r\n  height: 220px;\r\n  border-radius: 10px 10px 0 0;\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 184px;\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    height: 140px;\r\n  }\r\n`;\r\n\r\nconst PostItemContent = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 14px;\r\n  gap: 14px;\r\n\r\n  @media (max-width: 1024px) {\r\n    gap: 12px;\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    padding: 10px;\r\n    gap: 10px;\r\n  }\r\n`;\r\n\r\nconst CategoryWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n`;\r\n\r\nconst CategoryItem = styled.div`\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  font-weight: 600;\r\n  padding: 2px 8px;\r\n  border-radius: 4px;\r\n  background-color: #ffeccc;\r\n  color: #402e32;\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    font-size: 10px;\r\n    line-height: 16px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: -webkit-box;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  overflow-wrap: break-word;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  line-height: 24px;\r\n  color: #402e32;\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n  }\r\n`;\r\n\r\nconst Summary = styled.div`\r\n  display: -webkit-box;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  overflow-wrap: break-word;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: #b7a99a;\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    font-size: 10px;\r\n    line-height: 16px;\r\n  }\r\n`;\r\n\r\nconst Date = styled.div`\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  color: #504538;\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 10px;\r\n    line-height: 14px;\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    font-size: 8px;\r\n    line-height: 12px;\r\n  }\r\n`;\r\n\r\nexport const PostItem: FunctionComponent<PostItemProps> = ({\r\n  title,\r\n  date,\r\n  categories,\r\n  summary,\r\n  thumbnail: {\r\n    childImageSharp: { gatsbyImageData },\r\n  },\r\n  link,\r\n}) => {\r\n  return (\r\n    <PostItemWrapper to={link}>\r\n      <ThumbnailImage image={gatsbyImageData} alt=\"Post Item Image\" />\r\n      <PostItemContent>\r\n        <CategoryWrapper>\r\n          {categories.map(category => (\r\n            <CategoryItem key={category}>{category}</CategoryItem>\r\n          ))}\r\n        </CategoryWrapper>\r\n        <Title>{title}</Title>\r\n        <Summary>{summary}</Summary>\r\n        <Date>{date}</Date>\r\n      </PostItemContent>\r\n    </PostItemWrapper>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { PostItem } from './PostItem';\r\nimport { PostListItemType } from 'types/PostItem.types';\r\nimport {\r\n  useInfiniteScroll,\r\n  useInfiniteScrollType,\r\n} from 'hooks/useInfiniteScroll';\r\n\r\ntype PostListProps = {\r\n  selectedCategory: string;\r\n  posts: PostListItemType[];\r\n};\r\n\r\nconst PostListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 18px;\r\n  width: 1020px;\r\n  margin: 0 auto;\r\n  padding-left: 220px;\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 920px;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 700px;\r\n    padding-left: 0;\r\n  }\r\n\r\n  @media (max-width: 744px) {\r\n    width: 100%;\r\n    padding: 0 36px;\r\n    grid-gap: 12px;\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    padding: 0 28px;\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    padding: 0 18px;\r\n  }\r\n`;\r\n\r\nconst PostCategory = styled.div`\r\n  margin: 80px auto 70px;\r\n  padding-left: 220px;\r\n  text-align: center;\r\n\r\n  @media (max-width: 1024px) {\r\n    padding-left: 0;\r\n    margin-top: 132px;\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    margin: 86px auto 50px;\r\n  }\r\n`;\r\n\r\nconst PostCategoryText = styled.span`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  line-height: 50px;\r\n  font-weight: 800;\r\n  color: #c25450;\r\n  border-bottom: 1px solid #ff8982;\r\n  padding: 0 60px;\r\n\r\n  @media (max-width: 428px) {\r\n    font-size: 16px;\r\n    line-height: 40px;\r\n    padding: 0 40px;\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    font-size: 14px;\r\n    line-height: 30px;\r\n    padding: 0 30px;\r\n  }\r\n`;\r\n\r\nexport const PostList: FunctionComponent<PostListProps> = ({\r\n  selectedCategory,\r\n  posts,\r\n}) => {\r\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\r\n    selectedCategory,\r\n    posts,\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <PostCategory>\r\n        <PostCategoryText>\r\n          {selectedCategory === 'All' ? '전체 게시글' : selectedCategory}\r\n        </PostCategoryText>\r\n      </PostCategory>\r\n      <PostListWrapper ref={containerRef}>\r\n        {postList.map(\r\n          ({\r\n            node: {\r\n              id,\r\n              fields: { slug },\r\n              frontmatter,\r\n            },\r\n          }: PostListItemType) => (\r\n            <PostItem {...frontmatter} link={slug} key={id} />\r\n          ),\r\n        )}\r\n      </PostListWrapper>\r\n    </>\r\n  );\r\n};\r\n","import { MutableRefObject, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { PostListItemType } from 'types/PostItem.types';\r\n\r\nexport type useInfiniteScrollType = {\r\n  containerRef: MutableRefObject<HTMLDivElement | null>;\r\n  postList: PostListItemType[];\r\n};\r\n\r\nconst NUMBER_OF_ITEMS_PER_PAGE = 10;\r\n\r\nexport const useInfiniteScroll = (\r\n  selectedCategory: string,\r\n  posts: PostListItemType[],\r\n): useInfiniteScrollType => {\r\n  const containerRef: MutableRefObject<HTMLDivElement | null> =\r\n    useRef<HTMLDivElement>(null);\r\n  const observer: MutableRefObject<IntersectionObserver | null> =\r\n    useRef<IntersectionObserver>(null);\r\n  const [count, setCount] = useState<number>(1);\r\n\r\n  const postListByCategory = useMemo<PostListItemType[]>(\r\n    () =>\r\n      posts.filter(\r\n        ({\r\n          node: {\r\n            frontmatter: { categories },\r\n          },\r\n        }: PostListItemType) =>\r\n          selectedCategory !== 'All'\r\n            ? categories.includes(selectedCategory)\r\n            : true,\r\n      ),\r\n    [selectedCategory],\r\n  );\r\n\r\n  useEffect(() => {\r\n    observer.current = new IntersectionObserver((entries, observer) => {\r\n      if (!entries[0].isIntersecting) return;\r\n\r\n      setCount(value => value + 1);\r\n      observer.unobserve(entries[0].target);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => setCount(1), [selectedCategory]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\r\n      containerRef.current === null ||\r\n      containerRef.current.children.length === 0 ||\r\n      observer.current === null\r\n    )\r\n      return;\r\n\r\n    observer.current.observe(\r\n      containerRef.current.children[containerRef.current.children.length - 1],\r\n    );\r\n  }, [count, selectedCategory]);\r\n\r\n  return {\r\n    containerRef,\r\n    postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\r\n  };\r\n};\r\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n","import styled from '@emotion/styled';\r\nimport React from 'react';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 1028px;\r\n  height: calc(var(--vh, 1vh) * 100);\r\n  margin: 0 auto;\r\n  padding-left: 220px;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 100%;\r\n    padding: 0 48px;\r\n  }\r\n\r\n  @media (max-width: 744px) {\r\n    padding: 0 36px;\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    width: 70%;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst MainGIF = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url('/main.webp');\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: contain;\r\n\r\n  @media (max-width: 428px) {\r\n    background-image: url('/main-vertical.webp');\r\n  }\r\n`;\r\n\r\nconst ScrollText = styled.div`\r\n  position: absolute;\r\n  bottom: 84px;\r\n  font-size: 24px;\r\n  color: #fec479;\r\n  line-height: 34px;\r\n  left: calc(50% + 110px);\r\n  transform: translateX(-50%);\r\n\r\n  @media (max-width: 1024px) {\r\n    left: 50%;\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    font-size: 16px;\r\n    line-height: 24px;\r\n    bottom: 56px;\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    bottom: 40px;\r\n  }\r\n`;\r\n\r\nconst ScrollArrow = styled.img`\r\n  position: absolute;\r\n  width: 50px;\r\n  height: 50px;\r\n  left: calc(50% + 110px);\r\n  transform: translateX(-50%);\r\n\r\n  -webkit-animation: bounce 1s infinite;\r\n  animation: bounce 1s infinite;\r\n\r\n  @-webkit-keyframes bounce {\r\n    0% {\r\n      bottom: 38px;\r\n    }\r\n    50% {\r\n      bottom: 30px;\r\n    }\r\n    100% {\r\n      bottom: 38px;\r\n    }\r\n  }\r\n\r\n  @keyframes bounce {\r\n    0% {\r\n      bottom: 38px;\r\n    }\r\n    50% {\r\n      bottom: 30px;\r\n    }\r\n    100% {\r\n      bottom: 38px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    left: 50%;\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    width: 32px;\r\n    height: 32px;\r\n\r\n    @-webkit-keyframes bounce {\r\n      0% {\r\n        bottom: 28px;\r\n      }\r\n      50% {\r\n        bottom: 20px;\r\n      }\r\n      100% {\r\n        bottom: 28px;\r\n      }\r\n    }\r\n\r\n    @keyframes bounce {\r\n      0% {\r\n        bottom: 28px;\r\n      }\r\n      50% {\r\n        bottom: 20px;\r\n      }\r\n      100% {\r\n        bottom: 28px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    width: 28px;\r\n    height: 28px;\r\n\r\n    @-webkit-keyframes bounce {\r\n      0% {\r\n        bottom: 20px;\r\n      }\r\n      50% {\r\n        bottom: 12px;\r\n      }\r\n      100% {\r\n        bottom: 20px;\r\n      }\r\n    }\r\n\r\n    @keyframes bounce {\r\n      0% {\r\n        bottom: 20px;\r\n      }\r\n      50% {\r\n        bottom: 12px;\r\n      }\r\n      100% {\r\n        bottom: 20px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainCheeseBall = () => {\r\n  return (\r\n    <Wrapper>\r\n      <MainGIF></MainGIF>\r\n      <ScrollText>Scroll</ScrollText>\r\n      <ScrollArrow src=\"/icon/down.svg\"></ScrollArrow>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\nimport { PostList } from 'components/Main/PostList';\r\nimport { graphql } from 'gatsby';\r\nimport { PostListItemType } from 'types/PostItem.types';\r\nimport queryString, { ParsedQuery } from 'query-string';\r\nimport { Template } from 'components/Common/Template';\r\nimport { SideNavigation } from 'components/Common/SideNavigation';\r\nimport { MainCheeseBall } from 'components/Main/MainCheeseBall';\r\nimport useLoading from 'hooks/useLoading';\r\nimport LoadingAnimation from 'components/Common/LoadingAnimation';\r\n\r\ntype IndexPageProps = {\r\n  location: {\r\n    search: string;\r\n  };\r\n  data: {\r\n    site: {\r\n      siteMetadata: {\r\n        title: string;\r\n        description: string;\r\n        siteUrl: string;\r\n      };\r\n    };\r\n    allMarkdownRemark: {\r\n      edges: PostListItemType[];\r\n    };\r\n    file: {\r\n      publicURL: string;\r\n    };\r\n  };\r\n};\r\n\r\nconst IndexPage: FunctionComponent<IndexPageProps> = ({\r\n  location: { search },\r\n  data: {\r\n    site: {\r\n      siteMetadata: { title, description, siteUrl },\r\n    },\r\n    allMarkdownRemark: { edges },\r\n    file: { publicURL },\r\n  },\r\n}) => {\r\n  const parsed: ParsedQuery<string> = queryString.parse(search);\r\n  const isMainPage: boolean =\r\n    !parsed.category || typeof parsed.category !== 'string';\r\n  const selectedCategory: string = isMainPage\r\n    ? 'All'\r\n    : (parsed.category as string);\r\n  const loading = useLoading();\r\n\r\n  return (\r\n    <Template\r\n      title={title}\r\n      description={description}\r\n      url={siteUrl}\r\n      image={publicURL}\r\n    >\r\n      {loading && <LoadingAnimation />}\r\n      <SideNavigation selectedCategory={selectedCategory}></SideNavigation>\r\n      {isMainPage && <MainCheeseBall />}\r\n      <PostList selectedCategory={selectedCategory} posts={edges} />\r\n    </Template>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const getPostList = graphql`\r\n  query getPostList {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        siteUrl\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 768, height: 400)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    file(name: { eq: \"profile-image\" }) {\r\n      publicURL\r\n    }\r\n  }\r\n`;\r\n"],"names":["PostItemWrapper","_styled","Link","ThumbnailImage","GatsbyImage","PostItemContent","CategoryWrapper","CategoryItem","Title","Summary","Date","PostItem","_ref","title","date","categories","summary","thumbnail","childImageSharp","gatsbyImageData","link","___EmotionJSX","to","image","alt","map","category","key","PostListWrapper","PostCategory","PostCategoryText","PostList","selectedCategory","posts","containerRef","postList","useRef","observer","count","setCount","useState","postListByCategory","useMemo","filter","node","frontmatter","includes","useEffect","current","IntersectionObserver","entries","isIntersecting","value","unobserve","target","length","children","observe","slice","useInfiniteScroll","ref","_ref2","id","fields","slug","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","left","right","Array","prototype","concat","call","decode","input","tokens","match","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","Object","keys","replace","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","encodeURIComponent","x","charCodeAt","toString","toUpperCase","keysSorter","sort","a","b","Number","removeHash","hashStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","isEncodedArray","newValue","item","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","reduce","Boolean","stringify","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryString","getHash","urlObjectForFragmentEncode","URL","pick","exclude","Wrapper","MainGIF","ScrollText","ScrollArrow","MainCheeseBall","src","location","search","data","site","siteMetadata","description","siteUrl","allMarkdownRemark","edges","file","publicURL","parsed","isMainPage","loading","useLoading","Template","LoadingAnimation","SideNavigation"],"sourceRoot":""}