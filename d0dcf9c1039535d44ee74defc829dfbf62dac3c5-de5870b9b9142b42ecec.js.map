{"version":3,"file":"d0dcf9c1039535d44ee74defc829dfbf62dac3c5-de5870b9b9142b42ecec.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/SideNav/CategoryList.tsx","webpack://gatsby-starter-default/./src/components/SideNav/LinkIcon.tsx","webpack://gatsby-starter-default/./src/components/SideNav/LinkIconList.tsx","webpack://gatsby-starter-default/./src/components/SideNav/Introduction.tsx","webpack://gatsby-starter-default/./src/components/Common/SideNavigation.tsx","webpack://gatsby-starter-default/./src/components/Common/Footer.tsx","webpack://gatsby-starter-default/./src/components/Common/Header.tsx","webpack://gatsby-starter-default/./src/components/Common/ScrollIndicator.tsx","webpack://gatsby-starter-default/./src/components/Common/Template.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { Link } from 'gatsby';\r\nimport React, { FunctionComponent, ReactNode } from 'react';\r\n\r\ntype CategoryItemProps = {\r\n  active: boolean;\r\n};\r\n\r\ntype GatsbyLinkProps = {\r\n  children: ReactNode;\r\n  className?: string;\r\n  to: string;\r\n} & CategoryItemProps;\r\n\r\nexport type CategoryListProps = {\r\n  selectedCategory: string;\r\n  categoryList: {\r\n    [key: string]: number;\r\n  };\r\n};\r\n\r\nconst CategoryListWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 32px;\r\n  padding: 0 18px;\r\n\r\n  @media (max-width: 428px) {\r\n    margin-top: 18px;\r\n  }\r\n`;\r\n\r\nconst CategoryTitleText = styled.div`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  line-height: 24px;\r\n  color: #ff8982;\r\n  margin-bottom: 32px;\r\n  padding: 0 14px;\r\n\r\n  @media (max-width: 428px) {\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    margin-bottom: 18px;\r\n  }\r\n`;\r\n\r\nconst CategoryItem = styled(({ active, ...props }: GatsbyLinkProps) => (\r\n  <Link {...props} />\r\n))<CategoryItemProps>`\r\n  width: 100%;\r\n  line-height: 44px;\r\n  padding: 0 14px;\r\n  font-size: 14px;\r\n  font-weight: ${({ active }) => (active ? '600' : '400')};\r\n  color: ${({ active }) => (active ? '#C25450' : '#504538')};\r\n  background-color: ${({ active }) => (active ? '#f8ebe7' : 'none')};\r\n  border-radius: 10px;\r\n  vertical-align: middle;\r\n  text-decoration: none;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: #f8ebe7;\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    font-size: 12px;\r\n    line-height: 40px;\r\n  }\r\n`;\r\n\r\nconst Number = styled.span`\r\n  font-size: 12px;\r\n  color: inherit;\r\n  padding-left: 4px;\r\n\r\n  @media (max-width: 428px) {\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nexport const CategoryList: FunctionComponent<CategoryListProps> = ({\r\n  selectedCategory,\r\n  categoryList,\r\n}) => {\r\n  return (\r\n    <CategoryListWrapper>\r\n      <CategoryTitleText>Category</CategoryTitleText>\r\n      {Object.entries(categoryList).map(([name, count]) => (\r\n        <CategoryItem\r\n          to={`/?category=${name}`}\r\n          active={name === selectedCategory}\r\n          key={name}\r\n        >\r\n          {name}\r\n          <Number>({count})</Number>\r\n        </CategoryItem>\r\n      ))}\r\n    </CategoryListWrapper>\r\n  );\r\n};\r\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\ntype LinkIconProps = {\n  link: string;\n  image: string;\n};\n\nconst IconCircle = styled.a`\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background-color: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 428px) {\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nconst IconImage = styled.img`\n  width: 28px;\n  height: 28px;\n\n  @media (max-width: 428px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const LinkIcon: FunctionComponent<LinkIconProps> = ({ link, image }) => {\n  return (\n    <IconCircle href={link} target=\"_blank\">\n      <IconImage src={image} alt=\"icon\" />\n    </IconCircle>\n  );\n};\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport { LinkIcon } from './LinkIcon';\n\nconst Wrapper = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n\nexport const LinkIconList = () => {\n  return (\n    <Wrapper>\n      <LinkIcon\n        link=\"https://github.com/CheeseB\"\n        image=\"/icon/github.svg\"\n      ></LinkIcon>\n      <LinkIcon\n        link=\"https://www.instagram.com/cheeseb_all/\"\n        image=\"/icon/instagram.svg\"\n      ></LinkIcon>\n      <LinkIcon\n        link=\"mailto:2489ckckck@naver.com\"\n        image=\"/icon/email.svg\"\n      ></LinkIcon>\n    </Wrapper>\n  );\n};\n","import styled from '@emotion/styled';\r\nimport React, { FunctionComponent, useContext } from 'react';\r\nimport { LinkIconList } from './LinkIconList';\r\nimport { Link } from 'gatsby';\r\nimport { SideBarContext } from 'contexts/SideBarContext';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 338px;\r\n  border-bottom: 1px solid rgba(183, 169, 154, 0.3);\r\n\r\n  @media (max-width: 428px) {\r\n    height: 266px;\r\n  }\r\n`;\r\n\r\nconst ProfileImage = styled.img`\r\n  width: 112px;\r\n  height: 112px;\r\n  margin-bottom: 12px;\r\n  border-radius: 50%;\r\n\r\n  @media (max-width: 428px) {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`;\r\n\r\nconst TitleText = styled(Link)`\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  line-height: 30px;\r\n  color: #504538;\r\n  margin-bottom: 4px;\r\n\r\n  @media (max-width: 428px) {\r\n    font-size: 16px;\r\n    line-height: 24px;\r\n  }\r\n`;\r\n\r\nconst AuthorText = styled.div`\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: #a87564;\r\n  margin-bottom: 16px;\r\n\r\n  @media (max-width: 428px) {\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n  }\r\n`;\r\n\r\nexport const Introduction: FunctionComponent = () => {\r\n  const { setOpen } = useContext(SideBarContext) || {};\r\n  const closeNavigationBar = () => {\r\n    setOpen && setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ProfileImage src=\"/profile-image.png\" alt=\"CheeseBall\" />\r\n      <TitleText to=\"/\" onClick={closeNavigationBar}>\r\n        개발자맛 치즈볼\r\n      </TitleText>\r\n      <AuthorText>CheeseB</AuthorText>\r\n      <LinkIconList></LinkIconList>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\nimport {\r\n  CategoryList,\r\n  CategoryListProps,\r\n} from 'components/SideNav/CategoryList';\r\nimport { Introduction } from 'components/SideNav/Introduction';\r\nimport { SideBarContext } from 'contexts/SideBarContext';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\nimport React, {\r\n  FunctionComponent,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n} from 'react';\r\nimport { PostListItemType } from 'types/PostItem.types';\r\n\r\ntype NavigationOpenProps = {\r\n  isOpen: boolean;\r\n};\r\n\r\ntype NavigationProps = {\r\n  selectedCategory: string;\r\n};\r\n\r\nconst NavigationBar = styled.nav<NavigationOpenProps>`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 220px;\r\n  height: calc(var(--vh, 1vh) * 100);\r\n  z-index: 5;\r\n  overflow-y: scroll;\r\n  background-color: #fff8ee;\r\n  box-shadow: 2px 0px 6px rgba(0, 0, 0, 0.1);\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n  transition: left 0.5s ease;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    left: ${({ isOpen }) => (isOpen ? '0' : '-220px')};\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst Background = styled.div<NavigationOpenProps>`\r\n  display: none;\r\n  width: 100%;\r\n  height: calc(var(--vh, 1vh) * 100);\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  z-index: 4;\r\n\r\n  @media (max-width: 1024px) {\r\n    display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\r\n  }\r\n`;\r\n\r\nexport const SideNavigation: FunctionComponent<NavigationProps> = ({\r\n  selectedCategory,\r\n}) => {\r\n  const { isOpen, setOpen } = useContext(SideBarContext) || {};\r\n  const closeNavigationBar = () => setOpen!(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) document.body.style.overflow = 'hidden';\r\n    else document.body.style.overflow = 'scroll';\r\n  }, [isOpen]);\r\n  useEffect(() => {\r\n    setOpen && setOpen(false);\r\n  }, [selectedCategory]);\r\n\r\n  const datas = useStaticQuery(graphql`\r\n    query getSidebarDatas {\r\n      allMarkdownRemark {\r\n        edges {\r\n          node {\r\n            frontmatter {\r\n              categories\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const categoryList = useMemo(\r\n    () =>\r\n      datas.allMarkdownRemark.edges.reduce(\r\n        (\r\n          list: CategoryListProps['categoryList'],\r\n          {\r\n            node: {\r\n              frontmatter: { categories },\r\n            },\r\n          }: PostListItemType,\r\n        ) => {\r\n          categories.forEach((category: string) => {\r\n            if (list[category] === undefined) list[category] = 1;\r\n            else list[category]++;\r\n          });\r\n          list['All']++;\r\n\r\n          return list;\r\n        },\r\n        { All: 0 },\r\n      ),\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <NavigationBar isOpen={isOpen ? isOpen : false}>\r\n        <Introduction />\r\n        <CategoryList\r\n          selectedCategory={selectedCategory}\r\n          categoryList={categoryList}\r\n        />\r\n      </NavigationBar>\r\n      <Background\r\n        isOpen={isOpen ? isOpen : false}\r\n        onClick={closeNavigationBar}\r\n      ></Background>\r\n    </>\r\n  );\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 1380px;\r\n  margin: 100px auto 30px;\r\n  padding-left: 220px;\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 980px;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: calc(100% - 96px);\r\n    padding-left: 0;\r\n  }\r\n\r\n  @media (max-width: 744px) {\r\n    width: calc(100% - 72px);\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    width: calc(100% - 56px);\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    width: calc(100% - 36px);\r\n  }\r\n`;\r\n\r\nconst FooterWrapper = styled.footer`\r\n  display: flex;\r\n  justify-content: end;\r\n  color: #b7a99a;\r\n  width: 100%;\r\n  font-size: 12px;\r\n  line-height: 30px;\r\n  border-top: 1px solid rgba(183, 169, 154, 0.3);\r\n  align-self: flex-end;\r\n`;\r\n\r\nexport const Footer: FunctionComponent = () => {\r\n  return (\r\n    <Wrapper>\r\n      <FooterWrapper>© CheeseB, Powered By Gatsby.</FooterWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { SideBarContext } from 'contexts/SideBarContext';\r\nimport React, { FunctionComponent, useContext } from 'react';\r\n\r\nconst HeaderBar = styled.header`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 3;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 52px;\r\n  padding: 0 48px;\r\n  background-color: #fff8ee;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\r\n  transition: top 0.5s ease;\r\n\r\n  @media (min-width: 1024px) {\r\n    top: -52px;\r\n    box-shadow: none;\r\n  }\r\n\r\n  @media (max-width: 744px) {\r\n    padding: 0 36px;\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    height: 42px;\r\n    padding: 0 28px;\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    padding: 0 18px;\r\n  }\r\n`;\r\n\r\nconst HamburgerBtn = styled.button`\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst HamburgerBtnImage = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n\r\n  @media (max-width: 428px) {\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n`;\r\n\r\nconst HeaderTitleText = styled.div`\r\n  font-size: 20px;\r\n  line-height: 30px;\r\n  font-weight: 800;\r\n  color: #504538;\r\n  position: relative;\r\n  top: -2px;\r\n\r\n  @media (max-width: 428px) {\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n  }\r\n`;\r\n\r\nconst ProfileImage = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  @media (max-width: 428px) {\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n`;\r\n\r\nexport const Header: FunctionComponent = () => {\r\n  const { setOpen } = useContext(SideBarContext) || {};\r\n  const toggleNavigationBar = () => {\r\n    setOpen && setOpen(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <HeaderBar>\r\n      <HamburgerBtn onClick={toggleNavigationBar}>\r\n        <HamburgerBtnImage src=\"/icon/hamburger-button.svg\" alt=\"-\" />\r\n      </HamburgerBtn>\r\n      <HeaderTitleText>개발자맛 치즈볼</HeaderTitleText>\r\n      <ProfileImage src=\"/profile-image-small.png\" alt=\"\"></ProfileImage>\r\n    </HeaderBar>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\nimport React, { useEffect, useState } from 'react';\n\ntype ScrollProps = {\n  scrollWidth: number;\n};\n\nconst ProgressBar = styled.div<ScrollProps>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: ${({ scrollWidth }) => scrollWidth}%;\n  height: 4px;\n  background-color: #fec479;\n  z-index: 3;\n  transition: width 0.3s ease;\n\n  @media (max-width: 1024px) {\n    top: 52px;\n  }\n\n  @media (max-width: 744px) {\n    height: 2px;\n  }\n\n  @media (max-width: 428px) {\n    top: 42px;\n  }\n`;\n\nexport const ScrollIndicator = () => {\n  const [scrollWidth, setScrollWidth] = useState(0);\n\n  const updateScrollIndicator = () => {\n    const windowHeight =\n      document.documentElement.scrollHeight -\n      document.documentElement.clientHeight;\n    const scrollPosition = window.scrollY;\n\n    const scrollPercentage = (scrollPosition / windowHeight) * 100;\n    setScrollWidth(scrollPercentage);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', updateScrollIndicator);\n\n    return () => {\n      window.removeEventListener('scroll', updateScrollIndicator);\n    };\n  }, []);\n  return <ProgressBar scrollWidth={scrollWidth}></ProgressBar>;\n};\n","import styled from '@emotion/styled';\r\nimport React, { FunctionComponent, ReactNode } from 'react';\r\nimport { Footer } from './Footer';\r\nimport { GlobalStyle } from './GlobalStyle';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { Header } from './Header';\r\nimport { ScrollIndicator } from './ScrollIndicator';\r\n\r\ntype TemplateProps = {\r\n  title: string;\r\n  description: string;\r\n  url: string;\r\n  image: string;\r\n  children: ReactNode;\r\n};\r\n\r\nconst Container = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  min-height: calc(var(--vh, 1vh) * 100);\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Template: FunctionComponent<TemplateProps> = ({\r\n  title,\r\n  description,\r\n  url,\r\n  image,\r\n  children,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <meta httpEquiv=\"Content-Type\" content=\"text/html;charset=UTF-8\" />\r\n\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:title\" content={title} />\r\n        <meta property=\"og:description\" content={description} />\r\n        <meta property=\"og:image\" content={image} />\r\n        <meta property=\"og:url\" content={url} />\r\n        <meta property=\"og:site_name\" content={title} />\r\n\r\n        <meta name=\"twitter:card\" content=\"summary\" />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n\r\n        <link rel=\"shortcut icon\" href=\"/favicon/favicon.ico\" />\r\n        <link\r\n          rel=\"apple-touch-icon\"\r\n          sizes=\"57x57\"\r\n          href=\"/favicon/apple-icon-57x57.png\"\r\n        />\r\n        <link\r\n          rel=\"apple-touch-icon\"\r\n          sizes=\"60x60\"\r\n          href=\"/favicon/apple-icon-60x60.png\"\r\n        />\r\n        <link\r\n          rel=\"apple-touch-icon\"\r\n          sizes=\"72x72\"\r\n          href=\"/favicon/apple-icon-72x72.png\"\r\n        />\r\n        <link\r\n          rel=\"apple-touch-icon\"\r\n          sizes=\"76x76\"\r\n          href=\"/favicon/apple-icon-76x76.png\"\r\n        />\r\n        <link\r\n          rel=\"apple-touch-icon\"\r\n          sizes=\"114x114\"\r\n          href=\"/favicon/apple-icon-114x114.png\"\r\n        />\r\n        <link\r\n          rel=\"apple-touch-icon\"\r\n          sizes=\"120x120\"\r\n          href=\"/favicon/apple-icon-120x120.png\"\r\n        />\r\n        <link\r\n          rel=\"apple-touch-icon\"\r\n          sizes=\"144x144\"\r\n          href=\"/favicon/apple-icon-144x144.png\"\r\n        />\r\n        <link\r\n          rel=\"apple-touch-icon\"\r\n          sizes=\"152x152\"\r\n          href=\"/favicon/apple-icon-152x152.png\"\r\n        />\r\n        <link\r\n          rel=\"apple-touch-icon\"\r\n          sizes=\"180x180\"\r\n          href=\"/favicon/apple-icon-180x180.png\"\r\n        />\r\n        <link\r\n          rel=\"icon\"\r\n          type=\"image/png\"\r\n          sizes=\"192x192\"\r\n          href=\"/favicon/android-icon-192x192.png\"\r\n        />\r\n        <link\r\n          rel=\"icon\"\r\n          type=\"image/png\"\r\n          sizes=\"32x32\"\r\n          href=\"/favicon/favicon-32x32.png\"\r\n        />\r\n        <link\r\n          rel=\"icon\"\r\n          type=\"image/png\"\r\n          sizes=\"96x96\"\r\n          href=\"/favicon/favicon-96x96.png\"\r\n        />\r\n        <link\r\n          rel=\"icon\"\r\n          type=\"image/png\"\r\n          sizes=\"16x16\"\r\n          href=\"/favicon/favicon-16x16.png\"\r\n        />\r\n        <link rel=\"manifest\" href=\"/favicon/manifest.json\" />\r\n        <meta name=\"msapplication-TileColor\" content=\"#FEC479\" />\r\n        <meta\r\n          name=\"msapplication-TileImage\"\r\n          content=\"/favicon/ms-icon-144x144.png\"\r\n        />\r\n        <meta name=\"theme-color\" content=\"#FEC479\" />\r\n\r\n        <meta\r\n          name=\"google-site-verification\"\r\n          content=\"QxP8HV3avuS-TynhxJcJZBJnyXaInJHSmpLvXF9PiWU\"\r\n        />\r\n        <meta\r\n          name=\"naver-site-verification\"\r\n          content=\"ae65cb659d9c9ea1ae78b5b3cf6745526fe8ef8d\"\r\n        />\r\n\r\n        <html lang=\"ko\" />\r\n      </Helmet>\r\n\r\n      <GlobalStyle />\r\n      <Header />\r\n      <ScrollIndicator></ScrollIndicator>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Footer />\r\n    </Container>\r\n  );\r\n};\r\n"],"names":["CategoryListWrapper","CategoryTitleText","CategoryItem","_styled","_ref","active","props","___EmotionJSX","Link","_ref2","_ref3","_ref4","Number","CategoryList","_ref5","selectedCategory","categoryList","Object","entries","map","_ref6","name","count","to","key","IconCircle","IconImage","LinkIcon","link","image","href","target","src","alt","Wrapper","styles","LinkIconList","ProfileImage","TitleText","AuthorText","Introduction","setOpen","useContext","SideBarContext","onClick","NavigationBar","isOpen","Background","SideNavigation","useEffect","document","body","style","overflow","datas","useStaticQuery","useMemo","allMarkdownRemark","edges","reduce","list","node","frontmatter","categories","forEach","category","undefined","All","FooterWrapper","Footer","HeaderBar","HamburgerBtn","HamburgerBtnImage","HeaderTitleText","Header","prev","ProgressBar","scrollWidth","ScrollIndicator","setScrollWidth","useState","updateScrollIndicator","windowHeight","documentElement","scrollHeight","clientHeight","scrollPosition","window","scrollY","addEventListener","removeEventListener","Container","Template","title","description","url","children","Helmet","content","httpEquiv","property","rel","sizes","type","lang","GlobalStyle"],"sourceRoot":""}