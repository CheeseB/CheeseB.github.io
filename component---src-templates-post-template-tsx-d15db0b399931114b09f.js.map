{"version":3,"file":"component---src-templates-post-template-tsx-d15db0b399931114b09f.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/Waves.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/Post/TableOfContents.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport React, { FunctionComponent, useEffect } from 'react';\n\nconst GiscusWrapper = styled.div`\n  .giscus {\n    max-width: 860px;\n    margin: 0 auto;\n    padding-left: 60px;\n  }\n\n  @media (max-width: 1512px) {\n    .giscus {\n      max-width: 920px;\n      padding-left: 220px;\n    }\n  }\n\n  @media (max-width: 1024px) {\n    .giscus {\n      max-width: 700px;\n      padding-left: 0;\n    }\n  }\n\n  @media (max-width: 744px) {\n    .giscus {\n      max-width: 100%;\n      padding: 0 36px;\n    }\n  }\n\n  @media (max-width: 428px) {\n    .giscus {\n      padding: 0 28px;\n    }\n  }\n\n  @media (max-width: 320px) {\n    .giscus {\n      padding: 0 18px;\n    }\n  }\n`;\n\ntype GiscusAttributesType = {\n  'data-repo': string;\n  'data-repo-id': string;\n  'data-category': string;\n  'data-category-id': string;\n  'data-mapping': string;\n  'data-strict': string;\n  'data-reactions-enabled': string;\n  'data-emit-metadata': string;\n  'data-input-position': string;\n  'data-theme': string;\n  'data-loading': string;\n  'data-lang': string;\n  src: string;\n  crossorigin: string;\n  async: string;\n};\n\nexport const CommentWidget: FunctionComponent = () => {\n  useEffect(() => {\n    const attributes: GiscusAttributesType = {\n      'data-repo': 'CheeseB/CheeseB.github.io',\n      'data-repo-id': 'MDEwOlJlcG9zaXRvcnkyOTQ5NzE5MTc=',\n      'data-category': 'Blog Comments',\n      'data-category-id': 'DIC_kwDOEZTqDc4CVlTC',\n      'data-mapping': 'pathname',\n      'data-strict': '0',\n      'data-reactions-enabled': '1',\n      'data-emit-metadata': '0',\n      'data-input-position': 'top',\n      'data-theme': 'light',\n      'data-loading': 'lazy',\n      'data-lang': 'ko',\n      src: 'https://giscus.app/client.js',\n      crossorigin: 'anonymous',\n      async: 'true',\n    };\n\n    const script = document.createElement('script');\n    Object.entries(attributes).forEach(([key, value]) => {\n      script.setAttribute(key, value);\n    });\n\n    const container = document.getElementById('giscus-container');\n    if (container) container.appendChild(script);\n\n    return () => {\n      if (container) container.removeChild(script);\n    };\n  }, []);\n\n  return (\n    <GiscusWrapper>\n      <div id=\"giscus-container\" />\n    </GiscusWrapper>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FunctionComponent } from 'react';\n\ninterface PostContentProps {\n  html: string;\n}\n\nconst MarkdownRenderer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 860px;\n  margin: 0 auto;\n  padding: 100px 0 100px 60px;\n  word-break: break-all;\n\n  line-height: 1.8;\n  font-size: 18px;\n  font-weight: 400;\n\n  * {\n    color: #402e32;\n  }\n\n  strong {\n    font-weight: 600;\n  }\n\n  mark {\n    font-weight: 600;\n    background-color: #ffeccc;\n  }\n\n  small {\n    font-style: italic;\n    color: grey;\n    font-size: 16px;\n  }\n\n  del {\n    color: grey;\n  }\n\n  p {\n    padding: 2px 0;\n    margin: 16px 0;\n  }\n\n  .gatsby-resp-image-image,\n  .gatsby-resp-image-wrapper {\n    border-radius: 10px;\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\n  }\n\n  a.anchor.before {\n    display: none;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4 {\n    font-weight: 800;\n  }\n\n  h2 {\n    font-size: 32px;\n    margin-bottom: 40px;\n    line-height: 1.5em;\n    padding-bottom: 24px;\n    position: relative;\n  }\n\n  h2:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    height: 6px;\n    width: 60px;\n    border-radius: 8px;\n    background-color: #fec479;\n  }\n\n  h2:after {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 2px;\n    height: 1px;\n    width: 100%;\n    background-color: #fec479;\n  }\n\n  * + h2 {\n    margin-top: 70px;\n  }\n\n  h3 {\n    font-size: 26px;\n    margin-bottom: 20px;\n  }\n\n  * + h3 {\n    margin-top: 60px;\n  }\n\n  h4 {\n    font-size: 22px;\n    margin-bottom: 20px;\n  }\n\n  * + h4 {\n    margin-top: 50px;\n  }\n\n  h1 + *,\n  h2 + *,\n  h3 + *,\n  h4 + * {\n    margin-top: 0;\n  }\n\n  blockquote {\n    margin: 16px 0;\n    padding: 5px 15px;\n    border-left: 4px solid #fec479;\n    background-color: #fff8f0;\n  }\n\n  blockquote p {\n    margin: 0;\n  }\n\n  table {\n    margin: 16px 0;\n    width: 100%;\n    border-collapse: collapse;\n    overflow: hidden;\n  }\n\n  th {\n    text-align: left;\n    font-weight: 600;\n    background: #fff8ee;\n    border-top: 1px solid #dfe0df;\n    border-bottom: 1px solid #dfe0df;\n  }\n\n  td,\n  th {\n    padding: 0.8em 0.6em;\n    vertical-align: middle;\n  }\n\n  td {\n    border-bottom: 1px solid #dfe0df;\n    background: #fff;\n  }\n\n  ol,\n  ul {\n    padding: 16px 0;\n    list-style: none;\n  }\n\n  ol ul,\n  ol ol,\n  ul ol,\n  ul ul {\n    padding: 0;\n  }\n\n  li {\n    margin: 10px 0;\n  }\n\n  li p {\n    margin: 0;\n    padding: 0;\n    display: inline;\n    vertical-align: middle;\n  }\n\n  ol {\n    counter-reset: list-counter;\n  }\n\n  ol li {\n    padding-left: 44px;\n    text-indent: -44px;\n  }\n\n  ol > li::before {\n    content: counter(list-counter);\n    counter-increment: list-counter;\n    width: 0.5em;\n    height: 0.5em;\n    padding: 0.5em;\n    font-size: 0.9em;\n    margin-right: 12px;\n    border-radius: 50%;\n    border: 4px solid #ffeccc;\n    background-color: #fec479;\n    color: #fff;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    text-indent: 0;\n  }\n\n  ol li li::before,\n  ul ol li::before {\n    width: 0.3em;\n    height: 0.3em;\n    padding: 0.3em;\n    font-size: 1em;\n    border: none;\n    background: none;\n    color: #fec479;\n  }\n\n  ul li {\n    padding-left: 32px;\n    text-indent: -32px;\n  }\n\n  ul li::before {\n    content: '';\n    width: 0.2em;\n    height: 0.2em;\n    padding: 0.2em;\n    margin-right: 12px;\n    border-radius: 50%;\n    border: 4px solid #ffeccc;\n    background-color: #fec479;\n    display: inline-block;\n    vertical-align: middle;\n    text-indent: 0;\n  }\n\n  ul li li::before,\n  ol ul li::before {\n    width: 0.15em;\n    height: 0.15em;\n    padding: 0.15em;\n    border: 3px solid #fec479;\n    background-color: #fff;\n  }\n\n  ul li li li::before {\n    border: none;\n    background-color: #fec479;\n  }\n\n  hr {\n    border-width: 0 0 6px;\n    border-style: solid;\n    border-image: url('/icon/dot.svg') 0 0 100% repeat;\n    width: 100%;\n    margin: 60px 0;\n  }\n\n  hr + * {\n    margin-top: 0;\n  }\n\n  a {\n    color: #ff8982;\n    text-decoration: underline;\n  }\n\n  .gatsby-highlight {\n    position: relative;\n    margin: 16px 0;\n  }\n\n  .code-header + .gatsby-highlight {\n    margin-top: 0;\n  }\n\n  .code-header + .gatsby-highlight::after {\n    content: attr(data-language);\n    position: absolute;\n    top: -36px;\n    right: 18px;\n    color: #cfd2d1;\n    font-size: 12px;\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    font-family: 'JetBrains Mono', monospace;\n    tab-size: 2;\n  }\n\n  pre[class*='language-'] {\n    margin: 0;\n    padding: 20px;\n    border-radius: 10px;\n    max-height: 600px;\n    overflow: scroll;\n    font-size: 16px;\n  }\n\n  .code-header + .gatsby-highlight pre[class*='language-'] {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n\n  pre[class*='language-']::-webkit-scrollbar {\n    width: 10px;\n    height: 10px;\n  }\n\n  pre[class*='language-']::-webkit-scrollbar-thumb {\n    background-color: #5d5d5d;\n    border-radius: 4px;\n  }\n\n  pre[class*='language-']::-webkit-scrollbar-corner {\n    display: none;\n  }\n\n  code[class*='language-'] span.token.interpolation,\n  code[class*='language-'] span.token.parameter,\n  code[class*='language-'] span.token.script,\n  code[class*='language-'] span.token.plain-text,\n  code[class*='language-'] span.token.format-spec,\n  span.token.language-css {\n    color: #ccc;\n  }\n\n  code[class*='language-'] span.token.regex-delimiter {\n    color: #67cdcc;\n  }\n\n  code[class*='language-'] span.token.regex-source.language-regex {\n    color: #7ec699;\n  }\n\n  code[class*='language-'] span.token.regex-flags,\n  code[class*='language-'] span.token.rule {\n    color: #cc99cd;\n  }\n\n  code.language-text {\n    background-color: #dfe0df;\n    color: #c25450;\n    padding: 0 8px;\n  }\n\n  .code-header {\n    display: flex;\n    align-items: center;\n    padding: 16px;\n    background-color: #434041;\n    border-radius: 8px 8px 0 0;\n    margin-top: 16px;\n  }\n\n  .code-header .btn {\n    border-radius: 50%;\n    width: 14px;\n    height: 14px;\n    margin: 0 4px;\n  }\n\n  .code-header .btn.red {\n    background-color: #f5655b;\n  }\n\n  .code-header .btn.yellow {\n    background-color: #f6bd3b;\n  }\n\n  .code-header .btn.green {\n    background-color: #43c645;\n  }\n\n  .source {\n    color: grey;\n    font-size: 14px;\n    text-align: center;\n    margin-bottom: 16px;\n  }\n\n  @media (max-width: 1512px) {\n    width: 920px;\n    padding-left: 220px;\n  }\n\n  @media (max-width: 1024px) {\n    width: 700px;\n    font-size: 16px;\n    padding: 100px 0;\n\n    h2 {\n      font-size: 28px;\n    }\n\n    h3 {\n      font-size: 22px;\n    }\n\n    h4 {\n      font-size: 18px;\n    }\n\n    pre[class*='language-'] {\n      font-size: 14px;\n    }\n\n    small {\n      font-size: 14px;\n    }\n\n    .source {\n      font-size: 12px;\n    }\n  }\n\n  @media (max-width: 744px) {\n    width: 100%;\n    padding: 120px 36px;\n  }\n\n  @media (max-width: 428px) {\n    padding: 80px 28px;\n    font-size: 12px;\n\n    p {\n      margin: 12px 0;\n    }\n\n    small {\n      font-size: 10px;\n    }\n\n    .source {\n      font-size: 8px;\n      margin-bottom: 12px;\n    }\n\n    h2 {\n      font-size: 20px;\n      margin-bottom: 30px;\n      padding-bottom: 14px;\n    }\n\n    h2:before {\n      width: 30px;\n    }\n\n    * + h2 {\n      margin-top: 50px;\n    }\n\n    h3 {\n      font-size: 18px;\n      margin-bottom: 14px;\n    }\n\n    * + h3 {\n      margin-top: 40px;\n    }\n\n    h4 {\n      font-size: 14px;\n      margin-bottom: 14px;\n    }\n\n    * + h4 {\n      margin-top: 30px;\n    }\n\n    h1 + *,\n    h2 + *,\n    h3 + *,\n    h4 + * {\n      margin-top: 0;\n    }\n\n    blockquote {\n      margin: 12px 0;\n      border-left: 2px solid #fec479;\n    }\n\n    table {\n      margin: 12px 0;\n    }\n\n    ol,\n    ul {\n      padding: 12px 0;\n    }\n\n    li {\n      margin: 8px 0;\n    }\n\n    ol li {\n      padding-left: 34px;\n      text-indent: -34px;\n    }\n\n    ul li {\n      padding-left: 24px;\n      text-indent: -24px;\n    }\n\n    ol li::before,\n    ul li::before {\n      margin-right: 8px;\n    }\n\n    hr {\n      margin: 30px 0;\n    }\n\n    hr + * {\n      margin-top: 0;\n    }\n\n    .gatsby-highlight {\n      margin: 12px 0;\n    }\n\n    .code-header + .gatsby-highlight {\n      margin-top: 0;\n    }\n\n    .code-header + .gatsby-highlight::after {\n      top: -28px;\n      right: 14px;\n      font-size: 10px;\n    }\n\n    pre[class*='language-'] {\n      padding: 14px;\n      max-height: 400px;\n      font-size: 10px;\n    }\n\n    pre[class*='language-']::-webkit-scrollbar {\n      width: 6px;\n      height: 6px;\n    }\n\n    .code-header {\n      margin-top: 12px;\n      padding: 12px;\n    }\n\n    .code-header .btn {\n      width: 12px;\n      height: 12px;\n    }\n  }\n\n  @media (max-width: 320px) {\n    padding: 60px 18px;\n    font-size: 10px;\n\n    h2 {\n      font-size: 16px;\n    }\n\n    h3 {\n      font-size: 14px;\n    }\n\n    h4 {\n      font-size: 12px;\n    }\n\n    pre[class*='language-'] {\n      font-size: 8px;\n    }\n\n    small {\n      font-size: 8px;\n    }\n\n    .source {\n      font-size: 6px;\n    }\n  }\n`;\n\nexport const PostContent: FunctionComponent<PostContentProps> = ({ html }) => {\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />;\n};\n","import styled from '@emotion/styled';\nimport React, { FunctionComponent } from 'react';\n\nexport type PostHeadInfoProps = {\n  title: string;\n  date: string;\n  categories: string[];\n};\n\nconst PostHeadInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  justify-content: space-between;\n  width: 1020px;\n  height: 100%;\n  margin: 0 auto;\n  color: #ffffff;\n  padding: 100px 0 100px 220px;\n\n  @media (max-width: 1440px) {\n    width: 920px;\n  }\n\n  @media (max-width: 1024px) {\n    width: 700px;\n    padding: 80px 0;\n  }\n\n  @media (max-width: 744px) {\n    width: 100%;\n    padding: 80px 36px;\n  }\n\n  @media (max-width: 428px) {\n    padding: 60px 28px;\n  }\n\n  @media (max-width: 320px) {\n    padding: 50px 18px;\n  }\n`;\n\nconst Category = styled.div`\n  color: #fff;\n  font-size: 18px;\n  line-height: 26px;\n\n  @media (max-width: 1024px) {\n    font-size: 16px;\n    line-height: 22px;\n  }\n\n  @media (max-width: 428px) {\n    font-size: 14px;\n    line-height: 20px;\n  }\n`;\n\nconst Title = styled.h1`\n  display: -webkit-box;\n  overflow: hidden;\n  overflow-wrap: break-word;\n  text-overflow: ellipsis;\n  white-space: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 38px;\n  line-height: 54px;\n  font-weight: 800;\n  color: #fff;\n\n  @media (max-width: 1024px) {\n    font-size: 32px;\n    line-height: 50px;\n  }\n\n  @media (max-width: 428px) {\n    font-size: 24px;\n    line-height: 34px;\n  }\n\n  @media (max-width: 320px) {\n    font-size: 18px;\n    line-height: 26px;\n  }\n`;\n\nconst Date = styled.div`\n  color: #fff;\n  font-size: 18px;\n  line-height: 26px;\n\n  @media (max-width: 1024px) {\n    font-size: 14px;\n    line-height: 20px;\n  }\n\n  @media (max-width: 428px) {\n    font-size: 12px;\n    line-height: 16px;\n  }\n`;\n\nexport const PostHeadInfo: FunctionComponent<PostHeadInfoProps> = ({\n  title,\n  date,\n  categories,\n}) => {\n  return (\n    <PostHeadInfoWrapper>\n      <Category>{categories.join(' / ')}</Category>\n      <Title>{title}</Title>\n      <Date>{date}</Date>\n    </PostHeadInfoWrapper>\n  );\n};\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nconst WavesContainer = styled.div`\n  .waves {\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 60px;\n  }\n\n  .parallax > use {\n    animation: move-forever 25s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;\n  }\n  .parallax > use:nth-of-type(1) {\n    animation-delay: -2s;\n    animation-duration: 7s;\n  }\n  .parallax > use:nth-of-type(2) {\n    animation-delay: -3s;\n    animation-duration: 10s;\n  }\n  .parallax > use:nth-of-type(3) {\n    animation-delay: -4s;\n    animation-duration: 13s;\n  }\n  .parallax > use:nth-of-type(4) {\n    animation-delay: -5s;\n    animation-duration: 20s;\n  }\n\n  @keyframes move-forever {\n    0% {\n      transform: translate3d(-90px, 0, 0);\n    }\n    100% {\n      transform: translate3d(85px, 0, 0);\n    }\n  }\n\n  @media (max-width: 744px) {\n    .waves {\n      height: 40px;\n    }\n  }\n\n  @media (max-width: 428px) {\n    .waves {\n      height: 24px;\n    }\n  }\n`;\n\nexport const Waves = () => {\n  return (\n    <WavesContainer>\n      <svg\n        className=\"waves\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xlinkHref=\"http://www.w3.org/1999/xlink\"\n        viewBox=\"0 24 150 28\"\n        preserveAspectRatio=\"none\"\n        shapeRendering=\"auto\"\n      >\n        <defs>\n          <path\n            id=\"gentle-wave\"\n            d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\n          />\n        </defs>\n        <g className=\"parallax\">\n          <use\n            xlinkHref=\"#gentle-wave\"\n            x=\"48\"\n            y=\"0\"\n            fill=\"rgba(255, 255, 255, 0.7)\"\n          />\n          <use\n            xlinkHref=\"#gentle-wave\"\n            x=\"48\"\n            y=\"3\"\n            fill=\"rgba(255, 255, 255, 0.5)\"\n          />\n          <use\n            xlinkHref=\"#gentle-wave\"\n            x=\"48\"\n            y=\"5\"\n            fill=\"rgba(255, 255, 255, 0.3)\"\n          />\n          <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\n        </g>\n      </svg>\n    </WavesContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\nimport React, { FunctionComponent } from 'react';\nimport { PostHeadInfo, PostHeadInfoProps } from './PostHeadInfo';\nimport { Waves } from './Waves';\n\ntype PostHeadProps = PostHeadInfoProps & {\n  thumbnail: IGatsbyImageData;\n};\n\nconst PostHeadWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 500px;\n\n  @media (max-width: 1024px) {\n    height: 440px;\n    margin-top: 52px;\n  }\n\n  @media (max-width: 428px) {\n    height: 380px;\n    margin-top: 42px;\n  }\n\n  @media (max-width: 320px) {\n    height: 340px;\n  }\n`;\n\nconst BackgroundImage = styled(GatsbyImage)`\n  position: absolute;\n  z-index: -1;\n  width: 100%;\n  height: 500px;\n  object-fit: cover;\n  margin-left: 220px;\n  filter: brightness(0.3);\n\n  @media (max-width: 1024px) {\n    margin-left: 0;\n    height: 440px;\n  }\n\n  @media (max-width: 428px) {\n    height: 380px;\n  }\n\n  @media (max-width: 320px) {\n    height: 340px;\n  }\n`;\n\nexport const PostHead: FunctionComponent<PostHeadProps> = ({\n  title,\n  date,\n  categories,\n  thumbnail,\n}) => {\n  return (\n    <PostHeadWrapper>\n      <BackgroundImage image={thumbnail} alt=\"thumbnail\" />\n      <Waves />\n      <PostHeadInfo title={title} date={date} categories={categories} />\n    </PostHeadWrapper>\n  );\n};\n","import styled from '@emotion/styled';\nimport React, { FunctionComponent, useEffect, useState } from 'react';\n\ntype TableOfContentsProps = {\n  contents: string;\n};\n\ntype FixTableProps = {\n  fixTable: boolean;\n};\n\nconst TOC = styled.div<FixTableProps>`\n  position: ${({ fixTable }) => (fixTable ? 'fixed' : 'absolute')};\n  width: 260px;\n  top: ${({ fixTable }) => (fixTable ? '80px' : '580px')};\n  left: calc(82%);\n  padding: 10px;\n  border-left: 2px solid #dfe0df;\n\n  p,\n  li {\n    padding: 2px 0;\n    color: grey;\n  }\n\n  a {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    width: 100%;\n    font-size: 16px;\n    color: grey;\n    line-height: 1.8em;\n    padding-left: 12px;\n    border-radius: 10px;\n    transition: background-color 0.3s ease;\n  }\n\n  a:hover {\n    background-color: #fff8ee;\n  }\n\n  ul {\n    list-style: none;\n  }\n\n  ul ul {\n    margin-left: 18px;\n  }\n\n  ul ul li a {\n    font-size: 14px;\n    color: #979797;\n  }\n\n  ul ul ul {\n    display: none;\n  }\n\n  @media (max-width: 1512px) {\n    display: none;\n  }\n`;\n\nexport const TableOfContents: FunctionComponent<TableOfContentsProps> = ({\n  contents,\n}) => {\n  const [fixTable, setFixTable] = useState(false);\n  const handleScroll = () => {\n    window.scrollY >= 500 ? setFixTable(true) : setFixTable(false);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <TOC\n      fixTable={fixTable}\n      dangerouslySetInnerHTML={{ __html: contents }}\n    ></TOC>\n  );\n};\n","import LoadingAnimation from 'components/Common/LoadingAnimation';\nimport { SideNavigation } from 'components/Common/SideNavigation';\nimport { Template } from 'components/Common/Template';\nimport { CommentWidget } from 'components/Post/CommentWidget';\nimport { PostContent } from 'components/Post/PostContent';\nimport { PostHead } from 'components/Post/PostHead';\nimport { TableOfContents } from 'components/Post/TableOfContents';\nimport { graphql } from 'gatsby';\nimport useLoading from 'hooks/useLoading';\nimport React, { FunctionComponent } from 'react';\nimport { PostPageItemType } from 'types/PostItem.types';\n\ntype PostTemplateProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: PostPageItemType[];\n    };\n  };\n  location: {\n    href: string;\n  };\n};\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n  location: { href },\n}) {\n  const {\n    node: {\n      html,\n      tableOfContents,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        categories,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL,\n        },\n      },\n    },\n  } = edges[0];\n\n  const loading = useLoading();\n\n  return (\n    <Template title={title} description={summary} url={href} image={publicURL}>\n      {loading && <LoadingAnimation />}\n      <SideNavigation selectedCategory={categories[0]}></SideNavigation>\n      <PostHead\n        title={title}\n        date={date}\n        categories={categories}\n        thumbnail={gatsbyImageData}\n      />\n      <TableOfContents contents={tableOfContents} />\n      <PostContent html={html} />\n      <CommentWidget />\n    </Template>\n  );\n};\n\nexport default PostTemplate;\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          tableOfContents\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["GiscusWrapper","CommentWidget","useEffect","script","document","createElement","Object","entries","src","crossorigin","async","forEach","_ref","key","value","setAttribute","container","getElementById","appendChild","removeChild","___EmotionJSX","id","MarkdownRenderer","PostContent","html","dangerouslySetInnerHTML","__html","PostHeadInfoWrapper","Category","Title","Date","PostHeadInfo","title","date","categories","join","WavesContainer","Waves","className","xmlns","xlinkHref","viewBox","preserveAspectRatio","shapeRendering","d","x","y","fill","PostHeadWrapper","BackgroundImage","_styled","GatsbyImage","PostHead","thumbnail","image","alt","TOC","fixTable","_ref2","TableOfContents","_ref3","contents","setFixTable","useState","handleScroll","window","scrollY","addEventListener","removeEventListener","data","allMarkdownRemark","edges","location","href","node","tableOfContents","frontmatter","summary","childImageSharp","gatsbyImageData","publicURL","loading","useLoading","Template","description","url","LoadingAnimation","SideNavigation","selectedCategory"],"sourceRoot":""}