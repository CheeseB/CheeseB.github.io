{"version":3,"file":"component---src-templates-post-template-tsx-c3fe58c01d5cf22bf60f.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/Waves.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/Post/TableOfContents.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport React, { FunctionComponent, useEffect } from 'react';\r\n\r\nconst GiscusWrapper = styled.div`\r\n  .giscus {\r\n    max-width: 860px;\r\n    margin: 0 auto;\r\n    padding-left: 60px;\r\n  }\r\n\r\n  @media (max-width: 1512px) {\r\n    .giscus {\r\n      max-width: 920px;\r\n      padding-left: 220px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    .giscus {\r\n      max-width: 700px;\r\n      padding-left: 0;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 744px) {\r\n    .giscus {\r\n      max-width: 100%;\r\n      padding: 0 36px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    .giscus {\r\n      padding: 0 28px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    .giscus {\r\n      padding: 0 18px;\r\n    }\r\n  }\r\n`;\r\n\r\ntype GiscusAttributesType = {\r\n  'data-repo': string;\r\n  'data-repo-id': string;\r\n  'data-category': string;\r\n  'data-category-id': string;\r\n  'data-mapping': string;\r\n  'data-strict': string;\r\n  'data-reactions-enabled': string;\r\n  'data-emit-metadata': string;\r\n  'data-input-position': string;\r\n  'data-theme': string;\r\n  'data-loading': string;\r\n  'data-lang': string;\r\n  src: string;\r\n  crossorigin: string;\r\n  async: string;\r\n};\r\n\r\nexport const CommentWidget: FunctionComponent = () => {\r\n  useEffect(() => {\r\n    const attributes: GiscusAttributesType = {\r\n      'data-repo': 'CheeseB/CheeseB.github.io',\r\n      'data-repo-id': 'MDEwOlJlcG9zaXRvcnkyOTQ5NzE5MTc=',\r\n      'data-category': 'Blog Comments',\r\n      'data-category-id': 'DIC_kwDOEZTqDc4CVlTC',\r\n      'data-mapping': 'pathname',\r\n      'data-strict': '0',\r\n      'data-reactions-enabled': '1',\r\n      'data-emit-metadata': '0',\r\n      'data-input-position': 'top',\r\n      'data-theme': 'light',\r\n      'data-loading': 'lazy',\r\n      'data-lang': 'ko',\r\n      src: 'https://giscus.app/client.js',\r\n      crossorigin: 'anonymous',\r\n      async: 'true',\r\n    };\r\n\r\n    const script = document.createElement('script');\r\n    Object.entries(attributes).forEach(([key, value]) => {\r\n      script.setAttribute(key, value);\r\n    });\r\n\r\n    const container = document.getElementById('giscus-container');\r\n    if (container) container.appendChild(script);\r\n\r\n    return () => {\r\n      if (container) container.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <GiscusWrapper>\r\n      <div id=\"giscus-container\" />\r\n    </GiscusWrapper>\r\n  );\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\ninterface PostContentProps {\r\n  html: string;\r\n}\r\n\r\nconst MarkdownRenderer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 860px;\r\n  margin: 0 auto;\r\n  padding: 100px 0 100px 60px;\r\n  word-break: break-all;\r\n\r\n  line-height: 1.8;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n\r\n  * {\r\n    color: #402e32;\r\n  }\r\n\r\n  strong {\r\n    font-weight: 600;\r\n  }\r\n\r\n  mark {\r\n    font-weight: 600;\r\n    background-color: #ffeccc;\r\n  }\r\n\r\n  del {\r\n    color: grey;\r\n  }\r\n\r\n  p {\r\n    padding: 2px 0;\r\n    margin: 16px 0;\r\n  }\r\n\r\n  img {\r\n    border-radius: 10px;\r\n  }\r\n\r\n  a.anchor.before {\r\n    display: none;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4 {\r\n    font-weight: 800;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 32px;\r\n    margin-bottom: 40px;\r\n    line-height: 1.5em;\r\n    padding-bottom: 24px;\r\n    position: relative;\r\n  }\r\n\r\n  h2:before {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    height: 6px;\r\n    width: 60px;\r\n    border-radius: 8px;\r\n    background-color: #fec479;\r\n  }\r\n\r\n  h2:after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 2px;\r\n    height: 1px;\r\n    width: 100%;\r\n    background-color: #fec479;\r\n  }\r\n\r\n  * + h2 {\r\n    margin-top: 70px;\r\n  }\r\n\r\n  h3 {\r\n    font-size: 26px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  * + h3 {\r\n    margin-top: 60px;\r\n  }\r\n\r\n  h4 {\r\n    font-size: 22px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  * + h4 {\r\n    margin-top: 50px;\r\n  }\r\n\r\n  h1 + *,\r\n  h2 + *,\r\n  h3 + *,\r\n  h4 + * {\r\n    margin-top: 0;\r\n  }\r\n\r\n  blockquote {\r\n    margin: 16px 0;\r\n    padding: 5px 15px;\r\n    border-left: 4px solid #fec479;\r\n    background-color: #fff8f0;\r\n  }\r\n\r\n  blockquote p {\r\n    margin: 0;\r\n  }\r\n\r\n  table {\r\n    margin: 16px 0;\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    overflow: hidden;\r\n  }\r\n\r\n  th {\r\n    text-align: left;\r\n    font-weight: 600;\r\n    background: #fff8ee;\r\n    border-top: 1px solid #dfe0df;\r\n    border-bottom: 1px solid #dfe0df;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding: 0.8em 0.6em;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  td {\r\n    border-bottom: 1px solid #dfe0df;\r\n    background: #fff;\r\n  }\r\n\r\n  ol,\r\n  ul {\r\n    padding: 16px 0;\r\n    list-style: none;\r\n  }\r\n\r\n  ol ul,\r\n  ol ol,\r\n  ul ol,\r\n  ul ul {\r\n    padding: 0;\r\n  }\r\n\r\n  li {\r\n    margin: 10px 0;\r\n  }\r\n\r\n  li p {\r\n    margin: 0;\r\n    padding: 0;\r\n    display: inline;\r\n    font-weight: 600;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  ol {\r\n    counter-reset: list-counter;\r\n  }\r\n\r\n  ol li {\r\n    padding-left: 44px;\r\n    text-indent: -44px;\r\n  }\r\n\r\n  ol li::before {\r\n    content: counter(list-counter);\r\n    counter-increment: list-counter;\r\n    width: 0.5em;\r\n    height: 0.5em;\r\n    padding: 0.5em;\r\n    font-size: 0.9em;\r\n    margin-right: 12px;\r\n    border-radius: 50%;\r\n    border: 4px solid #ffeccc;\r\n    background-color: #fec479;\r\n    color: #fff;\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-indent: 0;\r\n  }\r\n\r\n  ol li li::before,\r\n  ul ol li::before {\r\n    width: 0.3em;\r\n    height: 0.3em;\r\n    padding: 0.3em;\r\n    font-size: 1em;\r\n    border: none;\r\n    background: none;\r\n    color: #fec479;\r\n  }\r\n\r\n  ul li {\r\n    padding-left: 32px;\r\n    text-indent: -32px;\r\n  }\r\n\r\n  ul li::before {\r\n    content: '';\r\n    width: 0.2em;\r\n    height: 0.2em;\r\n    padding: 0.2em;\r\n    margin-right: 12px;\r\n    border-radius: 50%;\r\n    border: 4px solid #ffeccc;\r\n    background-color: #fec479;\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    text-indent: 0;\r\n  }\r\n\r\n  ul li li::before,\r\n  ol ul li::before {\r\n    width: 0.15em;\r\n    height: 0.15em;\r\n    padding: 0.15em;\r\n    border: 3px solid #fec479;\r\n    background-color: #fff;\r\n  }\r\n\r\n  ul li li li::before {\r\n    border: none;\r\n    background-color: #fec479;\r\n  }\r\n\r\n  hr {\r\n    border-width: 0 0 4px;\r\n    border-style: solid;\r\n    border-image: url('/icon/dot.svg') 0 0 100% repeat;\r\n    width: 100%;\r\n    margin: 60px 0;\r\n  }\r\n\r\n  a {\r\n    color: #ff8982;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  .gatsby-highlight {\r\n    position: relative;\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  .gatsby-highlight::after {\r\n    content: attr(data-language);\r\n    position: absolute;\r\n    top: -36px;\r\n    right: 18px;\r\n    color: #cfd2d1;\r\n    font-size: 12px;\r\n  }\r\n\r\n  code[class*='language-'],\r\n  pre[class*='language-'] {\r\n    tab-size: 2;\r\n  }\r\n\r\n  pre[class*='language-'] {\r\n    margin: 0;\r\n    padding: 20px;\r\n    border-radius: 0 0 10px 10px;\r\n    max-height: 600px;\r\n    overflow: scroll;\r\n    font-size: 16px;\r\n  }\r\n\r\n  pre[class*='language-']::-webkit-scrollbar {\r\n    width: 10px;\r\n    height: 10px;\r\n  }\r\n\r\n  pre[class*='language-']::-webkit-scrollbar-thumb {\r\n    background-color: #434041;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  pre[class*='language-']::-webkit-scrollbar-corner {\r\n    display: none;\r\n  }\r\n\r\n  code[class*='language-'] span.token.interpolation,\r\n  code[class*='language-'] span.token.parameter {\r\n    color: #ccc;\r\n  }\r\n\r\n  .code-header {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 16px;\r\n    background-color: #434041;\r\n    border-radius: 8px 8px 0 0;\r\n    margin-top: 16px;\r\n  }\r\n\r\n  .code-header .btn {\r\n    border-radius: 50%;\r\n    width: 14px;\r\n    height: 14px;\r\n    margin: 0 4px;\r\n  }\r\n\r\n  .code-header .btn.red {\r\n    background-color: #f5655b;\r\n  }\r\n\r\n  .code-header .btn.yellow {\r\n    background-color: #f6bd3b;\r\n  }\r\n\r\n  .code-header .btn.green {\r\n    background-color: #43c645;\r\n  }\r\n\r\n  @media (max-width: 1512px) {\r\n    width: 920px;\r\n    padding-left: 220px;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 700px;\r\n    font-size: 16px;\r\n    padding: 100px 0;\r\n\r\n    h2 {\r\n      font-size: 28px;\r\n    }\r\n\r\n    h3 {\r\n      font-size: 22px;\r\n    }\r\n\r\n    h4 {\r\n      font-size: 18px;\r\n    }\r\n\r\n    pre[class*='language-'] {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 744px) {\r\n    width: 100%;\r\n    padding: 120px 36px;\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    padding: 80px 28px;\r\n    font-size: 12px;\r\n\r\n    p {\r\n      margin: 12px 0;\r\n    }\r\n\r\n    h2 {\r\n      font-size: 20px;\r\n      margin-bottom: 30px;\r\n      padding-bottom: 14px;\r\n    }\r\n\r\n    h2:before {\r\n      width: 30px;\r\n    }\r\n\r\n    * + h2 {\r\n      margin-top: 50px;\r\n    }\r\n\r\n    h3 {\r\n      font-size: 18px;\r\n      margin-bottom: 14px;\r\n    }\r\n\r\n    * + h3 {\r\n      margin-top: 40px;\r\n    }\r\n\r\n    h4 {\r\n      font-size: 14px;\r\n      margin-bottom: 14px;\r\n    }\r\n\r\n    * + h4 {\r\n      margin-top: 30px;\r\n    }\r\n\r\n    h1 + *,\r\n    h2 + *,\r\n    h3 + *,\r\n    h4 + * {\r\n      margin-top: 0;\r\n    }\r\n\r\n    blockquote {\r\n      margin: 12px 0;\r\n      border-left: 2px solid #fec479;\r\n    }\r\n\r\n    table {\r\n      margin: 12px 0;\r\n    }\r\n\r\n    ol,\r\n    ul {\r\n      padding: 12px 0;\r\n    }\r\n\r\n    li {\r\n      margin: 8px 0;\r\n    }\r\n\r\n    ol li {\r\n      padding-left: 34px;\r\n      text-indent: -34px;\r\n    }\r\n\r\n    ul li {\r\n      padding-left: 24px;\r\n      text-indent: -24px;\r\n    }\r\n\r\n    ol li::before,\r\n    ul li::before {\r\n      margin-right: 8px;\r\n    }\r\n\r\n    hr {\r\n      margin: 30px 0;\r\n    }\r\n\r\n    .gatsby-highlight {\r\n      margin-bottom: 12px;\r\n    }\r\n\r\n    .gatsby-highlight::after {\r\n      top: -28px;\r\n      right: 14px;\r\n      font-size: 10px;\r\n    }\r\n\r\n    pre[class*='language-'] {\r\n      padding: 14px;\r\n      max-height: 400px;\r\n      font-size: 10px;\r\n    }\r\n\r\n    pre[class*='language-']::-webkit-scrollbar {\r\n      width: 6px;\r\n      height: 6px;\r\n    }\r\n\r\n    .code-header {\r\n      margin-top: 12px;\r\n      padding: 12px;\r\n    }\r\n\r\n    .code-header .btn {\r\n      width: 12px;\r\n      height: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    padding: 60px 18px;\r\n    font-size: 10px;\r\n\r\n    h2 {\r\n      font-size: 16px;\r\n    }\r\n\r\n    h3 {\r\n      font-size: 14px;\r\n    }\r\n\r\n    h4 {\r\n      font-size: 12px;\r\n    }\r\n\r\n    pre[class*='language-'] {\r\n      font-size: 8px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PostContent: FunctionComponent<PostContentProps> = ({ html }) => {\r\n  // const htmlString = useHtmlCodeParser(html);\r\n\r\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />;\r\n};\r\n","import styled from '@emotion/styled';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nexport type PostHeadInfoProps = {\r\n  title: string;\r\n  date: string;\r\n  categories: string[];\r\n};\r\n\r\nconst PostHeadInfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  justify-content: space-between;\r\n  width: 1020px;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  color: #ffffff;\r\n  padding: 100px 0 100px 220px;\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 920px;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 700px;\r\n    padding: 80px 0;\r\n  }\r\n\r\n  @media (max-width: 744px) {\r\n    width: 100%;\r\n    padding: 80px 36px;\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    padding: 60px 28px;\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    padding: 50px 18px;\r\n  }\r\n`;\r\n\r\nconst Category = styled.div`\r\n  color: #fff;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  display: -webkit-box;\r\n  overflow: hidden;\r\n  overflow-wrap: break-word;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  font-size: 36px;\r\n  line-height: 52px;\r\n  font-weight: 800;\r\n  color: #fff;\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 32px;\r\n    line-height: 46px;\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    font-size: 24px;\r\n    line-height: 34px;\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    font-size: 18px;\r\n    line-height: 26px;\r\n  }\r\n`;\r\n\r\nconst Date = styled.div`\r\n  color: #fff;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    font-size: 10px;\r\n    line-height: 14px;\r\n  }\r\n`;\r\n\r\nexport const PostHeadInfo: FunctionComponent<PostHeadInfoProps> = ({\r\n  title,\r\n  date,\r\n  categories,\r\n}) => {\r\n  return (\r\n    <PostHeadInfoWrapper>\r\n      <Category>{categories.join('/')}</Category>\r\n      <Title>{title}</Title>\r\n      <Date>{date}</Date>\r\n    </PostHeadInfoWrapper>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nconst WavesContainer = styled.div`\n  .waves {\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 60px;\n  }\n\n  .parallax > use {\n    animation: move-forever 25s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;\n  }\n  .parallax > use:nth-of-type(1) {\n    animation-delay: -2s;\n    animation-duration: 7s;\n  }\n  .parallax > use:nth-of-type(2) {\n    animation-delay: -3s;\n    animation-duration: 10s;\n  }\n  .parallax > use:nth-of-type(3) {\n    animation-delay: -4s;\n    animation-duration: 13s;\n  }\n  .parallax > use:nth-of-type(4) {\n    animation-delay: -5s;\n    animation-duration: 20s;\n  }\n\n  @keyframes move-forever {\n    0% {\n      transform: translate3d(-90px, 0, 0);\n    }\n    100% {\n      transform: translate3d(85px, 0, 0);\n    }\n  }\n\n  @media (max-width: 744px) {\n    .waves {\n      height: 40px;\n    }\n  }\n\n  @media (max-width: 428px) {\n    .waves {\n      height: 24px;\n    }\n  }\n`;\n\nexport const Waves = () => {\n  return (\n    <WavesContainer>\n      <svg\n        className=\"waves\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xlinkHref=\"http://www.w3.org/1999/xlink\"\n        viewBox=\"0 24 150 28\"\n        preserveAspectRatio=\"none\"\n        shapeRendering=\"auto\"\n      >\n        <defs>\n          <path\n            id=\"gentle-wave\"\n            d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\n          />\n        </defs>\n        <g className=\"parallax\">\n          <use\n            xlinkHref=\"#gentle-wave\"\n            x=\"48\"\n            y=\"0\"\n            fill=\"rgba(255, 255, 255, 0.7)\"\n          />\n          <use\n            xlinkHref=\"#gentle-wave\"\n            x=\"48\"\n            y=\"3\"\n            fill=\"rgba(255, 255, 255, 0.5)\"\n          />\n          <use\n            xlinkHref=\"#gentle-wave\"\n            x=\"48\"\n            y=\"5\"\n            fill=\"rgba(255, 255, 255, 0.3)\"\n          />\n          <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\n        </g>\n      </svg>\n    </WavesContainer>\n  );\n};\n","import styled from '@emotion/styled';\r\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { PostHeadInfo, PostHeadInfoProps } from './PostHeadInfo';\r\nimport { Waves } from './Waves';\r\n\r\ntype PostHeadProps = PostHeadInfoProps & {\r\n  thumbnail: IGatsbyImageData;\r\n};\r\n\r\nconst PostHeadWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 400px;\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 340px;\r\n    margin-top: 52px;\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    height: 280px;\r\n    margin-top: 42px;\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    height: 240px;\r\n  }\r\n`;\r\n\r\nconst BackgroundImage = styled(GatsbyImage)`\r\n  position: absolute;\r\n  z-index: -1;\r\n  width: 100%;\r\n  height: 400px;\r\n  object-fit: cover;\r\n  margin-left: 220px;\r\n  filter: brightness(0.3);\r\n\r\n  @media (max-width: 1024px) {\r\n    margin-left: 0;\r\n    height: 340px;\r\n  }\r\n\r\n  @media (max-width: 428px) {\r\n    height: 280px;\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    height: 240px;\r\n  }\r\n`;\r\n\r\nexport const PostHead: FunctionComponent<PostHeadProps> = ({\r\n  title,\r\n  date,\r\n  categories,\r\n  thumbnail,\r\n}) => {\r\n  return (\r\n    <PostHeadWrapper>\r\n      <BackgroundImage image={thumbnail} alt=\"thumbnail\" />\r\n      <Waves />\r\n      <PostHeadInfo title={title} date={date} categories={categories} />\r\n    </PostHeadWrapper>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\nimport React, { FunctionComponent, useEffect, useState } from 'react';\r\n\r\ntype TableOfContentsProps = {\r\n  contents: string;\r\n};\r\n\r\ntype FixTableProps = {\r\n  fixTable: boolean;\r\n};\r\n\r\nconst TOC = styled.div<FixTableProps>`\r\n  position: ${({ fixTable }) => (fixTable ? 'fixed' : 'absolute')};\r\n  width: 260px;\r\n  top: ${({ fixTable }) => (fixTable ? '120px' : '520px')};\r\n  left: calc(82%);\r\n  padding: 10px;\r\n  border-left: 2px solid #dfe0df;\r\n\r\n  p,\r\n  li {\r\n    padding: 2px 0;\r\n    color: grey;\r\n  }\r\n\r\n  a {\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: block;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    color: grey;\r\n    line-height: 1.8em;\r\n    padding-left: 12px;\r\n    border-radius: 10px;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n\r\n  a:hover {\r\n    background-color: #fff8ee;\r\n  }\r\n\r\n  ul {\r\n    list-style: none;\r\n  }\r\n\r\n  ul ul {\r\n    margin-left: 18px;\r\n  }\r\n\r\n  ul ul li a {\r\n    font-size: 14px;\r\n    color: #979797;\r\n  }\r\n\r\n  ul ul ul {\r\n    display: none;\r\n  }\r\n\r\n  @media (max-width: 1512px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const TableOfContents: FunctionComponent<TableOfContentsProps> = ({\r\n  contents,\r\n}) => {\r\n  const [fixTable, setFixTable] = useState(false);\r\n  const handleScroll = () => {\r\n    window.scrollY >= 400 ? setFixTable(true) : setFixTable(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <TOC\r\n      fixTable={fixTable}\r\n      dangerouslySetInnerHTML={{ __html: contents }}\r\n    ></TOC>\r\n  );\r\n};\r\n","import LoadingAnimation from 'components/Common/LoadingAnimation';\r\nimport { SideNavigation } from 'components/Common/SideNavigation';\r\nimport { Template } from 'components/Common/Template';\r\nimport { CommentWidget } from 'components/Post/CommentWidget';\r\nimport { PostContent } from 'components/Post/PostContent';\r\nimport { PostHead } from 'components/Post/PostHead';\r\nimport { TableOfContents } from 'components/Post/TableOfContents';\r\nimport { graphql } from 'gatsby';\r\nimport useLoading from 'hooks/useLoading';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { PostPageItemType } from 'types/PostItem.types';\r\n\r\ntype PostTemplateProps = {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostPageItemType[];\r\n    };\r\n  };\r\n  location: {\r\n    href: string;\r\n  };\r\n};\r\n\r\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n  },\r\n  location: { href },\r\n}) {\r\n  const {\r\n    node: {\r\n      html,\r\n      tableOfContents,\r\n      frontmatter: {\r\n        title,\r\n        summary,\r\n        date,\r\n        categories,\r\n        thumbnail: {\r\n          childImageSharp: { gatsbyImageData },\r\n          publicURL,\r\n        },\r\n      },\r\n    },\r\n  } = edges[0];\r\n\r\n  const loading = useLoading();\r\n\r\n  return (\r\n    <Template title={title} description={summary} url={href} image={publicURL}>\r\n      {loading && <LoadingAnimation />}\r\n      <SideNavigation selectedCategory={categories[0]}></SideNavigation>\r\n      <PostHead\r\n        title={title}\r\n        date={date}\r\n        categories={categories}\r\n        thumbnail={gatsbyImageData}\r\n      />\r\n      <TableOfContents contents={tableOfContents} />\r\n      <PostContent html={html} />\r\n      <CommentWidget />\r\n    </Template>\r\n  );\r\n};\r\n\r\nexport default PostTemplate;\r\n\r\nexport const queryMarkdownDataBySlug = graphql`\r\n  query queryMarkdownDataBySlug($slug: String) {\r\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\r\n      edges {\r\n        node {\r\n          html\r\n          tableOfContents\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData\r\n              }\r\n              publicURL\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["GiscusWrapper","CommentWidget","useEffect","script","document","createElement","Object","entries","src","crossorigin","async","forEach","_ref","key","value","setAttribute","container","getElementById","appendChild","removeChild","___EmotionJSX","id","MarkdownRenderer","target","name","styles","PostContent","html","dangerouslySetInnerHTML","__html","PostHeadInfoWrapper","Category","Title","Date","PostHeadInfo","title","date","categories","join","WavesContainer","Waves","className","xmlns","xlinkHref","viewBox","preserveAspectRatio","shapeRendering","d","x","y","fill","PostHeadWrapper","BackgroundImage","_styled","GatsbyImage","PostHead","thumbnail","image","alt","TOC","fixTable","_ref2","TableOfContents","_ref3","contents","setFixTable","useState","handleScroll","window","scrollY","addEventListener","removeEventListener","data","allMarkdownRemark","edges","location","href","node","tableOfContents","frontmatter","summary","childImageSharp","gatsbyImageData","publicURL","loading","useLoading","Template","description","url","LoadingAnimation","SideNavigation","selectedCategory"],"sourceRoot":""}